adv Java
  jdbc
  wcd
    ->
    ->
    ->



emp: 1, Jack , 1000

Employee emp = 1, Jack,1000

int a = 1;
jdbc


id   name  salary   city
1   jack  1000      Puna
2   John  2000      Mumbai
1   Jaxk 4000    Pune


Java                      DB
    -------------------->
       Driver




Java                   MySql  A  implements Connection
                       DB2   B implements Connection
                       Oracle sql  C implemnents Connection
                       PostgreSql   D Implemnets Connection

Connection c = new A();
Connection c = new B();
             = new C();

Type 1
Type 2
Type 3
Type 4

JDBC-ODBC bridge
Native-API driver
Network-Protocol driver (Middleware driver)
Database-Protocol driver (Pure Java driver) or thin driver.


SQL:
--DQL: Select 

DML:
  Select
  Insert
  Update
  Delete
  Merge

DDL:
  Create
  Alter
  Rename
  Truncate
  Drop


TCL:
 Commit
 Rollback
 Save
  

DCL:
 Grant
 Revoke


Create
  insert
Read
  select
Update
  update 
Delete
  delete



C ob = new A();


Specification
Connection c = DriverManager.


1. get the connection object
2. crud operation
    Statement
    PreparedStatement
    CallableStament

    executeUpdate => insert, update, delete
    executeQuery => select
    execute => all query





WCD


java                    server
object               id:1,
                     name: Jack
                     salary: 1000

                     <emp>
                        <id>1</id>
                        <name>Jack</name>
                        <salary>3000</salary>
                     <emp>

                     
                     {
                      "id":1,
                      "name":"Jack",
                       "salary" : 5000
                     }


#### Java

Java 2 
    SE
    EE
    ME

    prog1    prog2
    20s      .5s
    1mb      2000mb

WCD
                      server
client1
client2



get:
http://localhost:8080/03_wcd1/welcome.html? =ram&password=123


post:
http://localhost:8080/03_wcd1/welcome.html


    Serialixation           Servlet(interface)             ServletConfig

          
                          GenericServlet(class)


                            HttpServlet (class)


                            MyServlet
                               Request
                               Resposne


/login.html

/login.do

LoginResultServlet service method

-----------------------------------------
/login

map login url to LoginServlet claass

 <servlet>
  	<servlet-name>login</servlet-name>
  	<servlet-class>com.seed.servlet.LoginServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>login</servlet-name>
  	<url-pattern>/login</url-pattern>
  </servlet-mapping>


  /lifecycle
  LifecycleServlet

  <servlet>
  	<servlet-name>lifecycle1</servlet-name>
  	<servlet-class>com.seed.servlet.LifecycleServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>lifecycle1</servlet-name>
  	<url-pattern>/lifecycle</url-pattern>
  </servlet-mapping>
  


Thread lifecycle 
new

Runnable        suspend

Running

stop



RequestDispatcher
user    --------- >  seed 
                      person1   -------->        person2

                      person1
                      person2



send redirect 

user  -------------->  seed person1
      ---------------> person2



Manager     SeniorManager  
      

Session

Jsp
 basic Jsp




requst 1:  /index.html
response1 :  login page

request2 :-----------username ='jack' and pwd='123'------->  /login     
response2:  Welcome usernmae button to diplay friend list

request 3:
/firends

http is stateless


request 
Session
application


class MyServlet extends HttpServlet {
  int a1 = 1234;

   service(req, resp){
     int a = 10;


   }


}

.Jsp
<%
java code which you are writing in the service method

%>


<%=  x %>    =>   <% out.println(x) %>
int a =1;
<%=  a=10 %>  out.println(a=10);
<% = a; %>    out.println(a;);


class Two_jsp{
  int a = 111;

  void foo(){}

  public void service(){

    int a = 1;
    a = 100;

    out.println(a);
  }


}